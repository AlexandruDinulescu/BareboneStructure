{"version":3,"sources":["app.scss","abstracts/_module.scss","abstracts/_variables.scss","base/_module.scss","base/_reset.scss","base/_fonts.scss","base/_helpers.scss","base/_sprite.scss","modules/_module.scss","partials/_module.scss","abstracts/_mixins.scss","app.css"],"names":[],"mappings":"AAAA;;GAEG;ACFH;;;GAGG;ACHH;;GAEG;ACFH;;;GAGG;ACHH;;;GAGG;AAGH;;GAEG;AAEH;EACI,+BAAsB;UAAtB,uBAAsB;CACzB;;AAED;;;;;KAKK;AAEL;;;EAGI,4BAAmB;UAAnB,oBAAmB;CACtB;;ACzBD;;GAEG;ACEH;;GAEG;AACH;EACI,YAAW;EACX,YAAW;EACX,eAAc;CACf;;AAED;;;;;KAKG;AACH;EACE,kBAAiB;EAAG,OAAO;EAC3B,mBAAkB;EAAG,OAAO;EAC5B,mBAAkB;EAAG,OAAO;EAC5B,oBAAmB;EAAG,OAAO;EAC7B,YAAW;EAAG,OAAO;CACrB;;AAEF;;;;KAIG;AACH;EACE,iBAAgB;EAChB,WAAU;EAAG,OAAO;EACpB,kBAAiB;EACjB,oBAAmB;CACpB;;AAED;;;;KAIG;AACH;EACE,UAAS;EACT,oBAAmB;EACnB,YAAW;EACX,aAAY;EACZ,iBAAgB;EAChB,WAAU;EACV,mBAAkB;EAClB,WAAU;CACX;;AC0CC;EAfA,sBAAqB;EACrB,kBAAiB;EACjB,6BAA4B;EAN5B,wCAAuB;EALvB,kCAhDyC;EAsCzC,YAtC+C;EA0C/C,aA1CqD;CA0EpD;;AAFD;EAfA,sBAAqB;EACrB,kBAAiB;EACjB,6BAA4B;EAN5B,wCAAuB;EALvB,mCA/CwC;EAqCxC,YArC8C;EAyC9C,aAzCoD;CAyEnD;;AAFD;EAfA,sBAAqB;EACrB,kBAAiB;EACjB,6BAA4B;EAN5B,wCAAuB;EALvB,gCA9CgC;EAoChC,aApCuC;EAwCvC,cAxC8C;CAwE7C;;AAFD;EAfA,sBAAqB;EACrB,kBAAiB;EACjB,6BAA4B;EAN5B,wCAAuB;EALvB,6BA7CoC;EAmCpC,aAnC2C;EAuC3C,cAvCkD;CAuEjD;;AAFD;EAfA,sBAAqB;EACrB,kBAAiB;EACjB,6BAA4B;EAN5B,wCAAuB;EALvB,gCA5CmC;EAkCnC,aAlC0C;EAsC1C,cAtCiD;CAsEhD;;AAFD;EAfA,sBAAqB;EACrB,kBAAiB;EACjB,6BAA4B;EAN5B,wCAAuB;EALvB,gCA3CuC;EAiCvC,YAjC6C;EAqC7C,aArCmD;CAqElD;;AAFD;EAfA,sBAAqB;EACrB,kBAAiB;EACjB,6BAA4B;EAN5B,wCAAuB;EALvB,mCA1CqC;EAgCrC,YAhC2C;EAoC3C,aApCiD;CAoEhD;;AAFD;EAfA,sBAAqB;EACrB,kBAAiB;EACjB,6BAA4B;EAN5B,wCAAuB;EALvB,mCAzC2C;EA+B3C,aA/BkD;EAmClD,cAnCyD;CAmExD;;AAFD;EAfA,sBAAqB;EACrB,kBAAiB;EACjB,6BAA4B;EAN5B,wCAAuB;EALvB,mCAxCqC;EA8BrC,aA9B4C;EAkC5C,cAlCmD;CAkElD;;AAFD;EAfA,sBAAqB;EACrB,kBAAiB;EACjB,6BAA4B;EAN5B,wCAAuB;EALvB,mCAvCuC;EA6BvC,YA7B6C;EAiC7C,aAjCmD;CAiElD;;ACjGL;;;GAGG;ACHH;;;GAGG;ATMH;;GAEG;AAEH;EACI,iBAAgB;CAOnB;;AUOG;EVfJ;IUgBQ,QAAc;IVbd,YAAW;GAKlB;CWoMA;;AD9MG;EVEJ;IUDQ,QAAc;GVSrB;CW0MA;;AXvMD;EACK,WAAU;CACd","file":"app.css","sourcesContent":["/**\r\n * MAIN Application SCSS FIle. Imports everything into this.\r\n */\r\n\r\n@import 'abstracts/module'; // This should go first\r\n@import 'base/module'; // This should be second\r\n@import 'modules/module'; // This should be 3rd\r\n@import 'partials/module'; // 4th\r\n\r\n/**\r\n * Space for Vendor SCSS below \r\n */\r\n\r\np {\r\n    border: 0px none;\r\n    @include media-from(xs) {\r\n        border: 5px;\r\n    }\r\n    @include media-to(md) {\r\n\r\n    }\r\n}\r\n\r\n\r\nbody {\r\n     color: red;  \r\n}","/**\n * This SCSS file imports the scss files from this folder \n * These SCSS file contain utilities and configuration for the website\n */\n\n@import 'variables';\n@import 'functions';\n@import 'mixins';\n","/**\n * SCSS Variables\n */\n\n$breakpoints-max: ( xs: 575px, sm: 767px, md: 991px, lg: 1199px);\n$breakpoints-min: ( xs: 0px, sm: 576px, md: 768px, lg: 992px, xl: 1200px, );\n\n","/**\n * Import SCSS From This Folder \n * This Folder only contains SCSS that forms the base of a project\n */\n\n@import 'reset';\n@import 'fonts';\n@import 'colors';\n@import 'helpers';\n@import 'typography';\n@import 'sprite';\n\n","/**\n * RESET STYLESHEET\n * ================\n */\n\n\n/**\n * Set up a decent box model on the root element\n */\n\nhtml {\n    box-sizing: border-box;\n}\n\n/**\n   * Make all elements from the DOM inherit from the parent box-sizing\n   * Since `*` has a specificity of 0, it does not override the `html` value\n   * making all elements inheriting from the root box-sizing value\n   * See: https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/\n   */\n\n*,\n*::before,\n*::after {\n    box-sizing: inherit;\n}\n","/**\n * All @Font-face font declarations go here\n */","// -----------------------------------------------------------------------------\n// This file contains CSS helper classes.\n// -----------------------------------------------------------------------------\n\n/**\n * Clear inner floats\n */\n.clearfix::after {\n    clear: both;\n    content: '';\n    display: table;\n  }\n  \n  /**\n   * Main content containers\n   * 1. Make the container full-width with a maximum width\n   * 2. Center it in the viewport\n   * 3. Leave some space on the edges, especially valuable on small screens\n   */\n  .container {\n    margin-left: auto; /* 2 */\n    margin-right: auto; /* 2 */\n    padding-left: 20px; /* 3 */\n    padding-right: 20px; /* 3 */\n    width: 100%; /* 1 */\n   }\n  \n  /**\n   * Hide text while making it readable for screen readers\n   * 1. Needed in WebKit-based browsers because of an implementation bug;\n   *    See: https://code.google.com/p/chromium/issues/detail?id=457146\n   */\n  .hide-text {\n    overflow: hidden;\n    padding: 0; /* 1 */\n    text-indent: 101%;\n    white-space: nowrap;\n  }\n  \n  /**\n   * Hide element while making it readable for screen readers\n   * Shamelessly borrowed from HTML5Boilerplate:\n   * https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css#L119-L133\n   */\n  .visually-hidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n  }","// SCSS variables are information about icon's compiled state, stored under its original file name\n//\n// .icon-home {\n//   width: $icon-home-width;\n// }\n// $: '';\n// $: ;\n// $: ;\n// $: ;\n// $: ;\n// $: ;\n// $: ;\n// $: ;\n// $: ;\n// $: '';\n// $spritesheet-width: 360px;\n// $spritesheet-height: 273px;\n// $spritesheet-image: './img/sprite.png';\n// The large array-like variables contain all information about a single icon\n// $icon-home: x y offset_x offset_y width height total_width total_height image_path;\n//\n// At the bottom of this section, we provide information about the spritesheet itself\n// $spritesheet: width height image $spritesheet-sprites;\n$button-checkbox: (49px, 244px, -49px, -244px, 40px, 20px, 360px, 273px, './img/sprite.png', 'button-checkbox', );\n$button-radio: (109px, 244px, -109px, -244px, 40px, 20px, 360px, 273px, './img/sprite.png', 'button-radio', );\n$icon-coin: (0px, 122px, 0px, -122px, 102px, 102px, 360px, 273px, './img/sprite.png', 'icon-coin', );\n$icon-contact-hover: (0px, 0px, 0px, 0px, 170px, 102px, 360px, 273px, './img/sprite.png', 'icon-contact-hover', );\n$icon-contact: (190px, 0px, -190px, 0px, 170px, 102px, 360px, 273px, './img/sprite.png', 'icon-contact', );\n$icon-google-plus: (0px, 244px, 0px, -244px, 29px, 29px, 360px, 273px, './img/sprite.png', 'icon-google-plus', );\n$icon-list: (200px, 244px, -200px, -244px, 10px, 10px, 360px, 273px, './img/sprite.png', 'icon-list', );\n$icon-news-hover: (122px, 122px, -122px, -122px, 102px, 102px, 360px, 273px, './img/sprite.png', 'icon-news-hover', );\n$icon-news: (244px, 122px, -244px, -122px, 102px, 102px, 360px, 273px, './img/sprite.png', 'icon-news', );\n$icon-search: (169px, 244px, -169px, -244px, 11px, 11px, 360px, 273px, './img/sprite.png', 'icon-search', );\n$spritesheet-sprites: ($button-checkbox, $button-radio, $icon-coin, $icon-contact-hover, $icon-contact, $icon-google-plus, $icon-list, $icon-news-hover, $icon-news, $icon-search, );\n$spritesheet: (360px, 273px, './img/sprite.png', $spritesheet-sprites, );\n\n// The provided mixins are intended to be used with the array-like variables\n//\n// .icon-home {\n//   @include sprite-width($icon-home);\n// }\n//\n// .icon-email {\n//   @include sprite($icon-email);\n// }\n//\n// Example usage in HTML:\n//\n// `display: block` sprite:\n// <div class=\"icon-home\"></div>\n//\n// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:\n//\n// // CSS\n// .icon {\n//   display: inline-block;\n// }\n//\n// // HTML\n// <i class=\"icon icon-home\"></i>\n@mixin sprite-width($sprite) {\n    width: nth($sprite, 5);\n}\n\n@mixin sprite-height($sprite) {\n    height: nth($sprite, 6);\n}\n\n@mixin sprite-position($sprite) {\n    $sprite-offset-x: nth($sprite, 3);\n    $sprite-offset-y: nth($sprite, 4);\n    background-position: $sprite-offset-x  $sprite-offset-y;\n}\n\n@mixin sprite-image($sprite) {\n    $sprite-image: nth($sprite, 9);\n    background-image: url(#{$sprite-image});\n}\n\n@mixin sprite($sprite) {\n    display: inline-block;\n    margin-right: 5px; \n    background-repeat: no-repeat;\n    @include sprite-image($sprite);\n    @include sprite-position($sprite);\n    @include sprite-width($sprite);\n    @include sprite-height($sprite);\n}\n\n// The `sprites` mixin generates identical output to the CSS template\n//   but can be overridden inside of SCSS\n//\n@mixin sprites($sprites) {\n  @each $sprite in $sprites {\n    $sprite-name: nth($sprite, 10);\n    .#{$sprite-name} {\n      @include sprite($sprite);\n    }\n  }\n}\n@include sprites($spritesheet-sprites);\n","/**\n * This SCSS file imports everything from this folder.\n * These SCSS files denote modules/components such as: buttons/dropdown/navigation/carousels/etc\n */","/**\n * This SCSS file imports all the SCSS files from this folder\n * These files denote specific scss for different page and page types\n */","/// Media To (breakpoint up to) Max Width\n/// @author AlexD \n/// @group Media Queries\n/// @param {string} $name - $name of the $breakpoint\n/// @example\n///\n///     @include media-to([xs,sm,md,lg,xl,...]) {\n///         @content\n///     }\n/// \n@mixin media-to($name) {\n    @media screen and (max-width: map-get($breakpoints-max, $name)) {\n        /* #{$name} */\n        @content;\n    }\n}\n\n/// Media From (breakpoint from ) Min Width\n/// @author AlexD \n/// @group Media Queries\n/// @param {string} $name - $name of the $breakpoint \n/// @example \n///     \n///     @include media-from([sm,md,lg,xl...]){\n///         @content \n///     }\n/// \n@mixin media-from($name) {\n    @media screen and (min-width: map-get($breakpoints-min, $name)) {\n        /* #{$name} */\n        @content;\n    }\n}\n\n/// Clearfix mixin just include where needed\n/// @author AlexD\n/// @group utils\n/// @example\n///     .element {\n///         @include clearfix();\n///     }\n/// \n@mixin clearfix() {\n    &:after {\n        content: \" \";\n        display: table;\n        clear: both;\n    }\n}","/**\r\n * MAIN Application SCSS FIle. Imports everything into this.\r\n */\n/**\n * This SCSS file imports the scss files from this folder \n * These SCSS file contain utilities and configuration for the website\n */\n/**\n * SCSS Variables\n */\n/**\n * Import SCSS From This Folder \n * This Folder only contains SCSS that forms the base of a project\n */\n/**\n * RESET STYLESHEET\n * ================\n */\n/**\n * Set up a decent box model on the root element\n */\nhtml {\n  box-sizing: border-box;\n}\n\n/**\n   * Make all elements from the DOM inherit from the parent box-sizing\n   * Since `*` has a specificity of 0, it does not override the `html` value\n   * making all elements inheriting from the root box-sizing value\n   * See: https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/\n   */\n*,\n*::before,\n*::after {\n  box-sizing: inherit;\n}\n\n/**\n * All @Font-face font declarations go here\n */\n/**\n * Clear inner floats\n */\n.clearfix::after {\n  clear: both;\n  content: '';\n  display: table;\n}\n\n/**\n   * Main content containers\n   * 1. Make the container full-width with a maximum width\n   * 2. Center it in the viewport\n   * 3. Leave some space on the edges, especially valuable on small screens\n   */\n.container {\n  margin-left: auto;\n  /* 2 */\n  margin-right: auto;\n  /* 2 */\n  padding-left: 20px;\n  /* 3 */\n  padding-right: 20px;\n  /* 3 */\n  width: 100%;\n  /* 1 */\n}\n\n/**\n   * Hide text while making it readable for screen readers\n   * 1. Needed in WebKit-based browsers because of an implementation bug;\n   *    See: https://code.google.com/p/chromium/issues/detail?id=457146\n   */\n.hide-text {\n  overflow: hidden;\n  padding: 0;\n  /* 1 */\n  text-indent: 101%;\n  white-space: nowrap;\n}\n\n/**\n   * Hide element while making it readable for screen readers\n   * Shamelessly borrowed from HTML5Boilerplate:\n   * https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css#L119-L133\n   */\n.visually-hidden {\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\n\n.button-checkbox {\n  display: inline-block;\n  margin-right: 5px;\n  background-repeat: no-repeat;\n  background-image: url(./img/sprite.png);\n  background-position: -49px -244px;\n  width: 40px;\n  height: 20px;\n}\n\n.button-radio {\n  display: inline-block;\n  margin-right: 5px;\n  background-repeat: no-repeat;\n  background-image: url(./img/sprite.png);\n  background-position: -109px -244px;\n  width: 40px;\n  height: 20px;\n}\n\n.icon-coin {\n  display: inline-block;\n  margin-right: 5px;\n  background-repeat: no-repeat;\n  background-image: url(./img/sprite.png);\n  background-position: 0px -122px;\n  width: 102px;\n  height: 102px;\n}\n\n.icon-contact-hover {\n  display: inline-block;\n  margin-right: 5px;\n  background-repeat: no-repeat;\n  background-image: url(./img/sprite.png);\n  background-position: 0px 0px;\n  width: 170px;\n  height: 102px;\n}\n\n.icon-contact {\n  display: inline-block;\n  margin-right: 5px;\n  background-repeat: no-repeat;\n  background-image: url(./img/sprite.png);\n  background-position: -190px 0px;\n  width: 170px;\n  height: 102px;\n}\n\n.icon-google-plus {\n  display: inline-block;\n  margin-right: 5px;\n  background-repeat: no-repeat;\n  background-image: url(./img/sprite.png);\n  background-position: 0px -244px;\n  width: 29px;\n  height: 29px;\n}\n\n.icon-list {\n  display: inline-block;\n  margin-right: 5px;\n  background-repeat: no-repeat;\n  background-image: url(./img/sprite.png);\n  background-position: -200px -244px;\n  width: 10px;\n  height: 10px;\n}\n\n.icon-news-hover {\n  display: inline-block;\n  margin-right: 5px;\n  background-repeat: no-repeat;\n  background-image: url(./img/sprite.png);\n  background-position: -122px -122px;\n  width: 102px;\n  height: 102px;\n}\n\n.icon-news {\n  display: inline-block;\n  margin-right: 5px;\n  background-repeat: no-repeat;\n  background-image: url(./img/sprite.png);\n  background-position: -244px -122px;\n  width: 102px;\n  height: 102px;\n}\n\n.icon-search {\n  display: inline-block;\n  margin-right: 5px;\n  background-repeat: no-repeat;\n  background-image: url(./img/sprite.png);\n  background-position: -169px -244px;\n  width: 11px;\n  height: 11px;\n}\n\n/**\n * This SCSS file imports everything from this folder.\n * These SCSS files denote modules/components such as: buttons/dropdown/navigation/carousels/etc\n */\n/**\n * This SCSS file imports all the SCSS files from this folder\n * These files denote specific scss for different page and page types\n */\n/**\r\n * Space for Vendor SCSS below \r\n */\np {\n  border: 0px none;\n}\n\n@media screen and (min-width: 0px) {\n  p {\n    /* xs */\n    border: 5px;\n  }\n}\n\n@media screen and (max-width: 991px) {\n  p {\n    /* md */\n  }\n}\n\nbody {\n  color: red;\n}\n"]}