// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$button-checkbox-name: 'button-checkbox';
$button-checkbox-x: 49px;
$button-checkbox-y: 244px;
$button-checkbox-offset-x: -49px;
$button-checkbox-offset-y: -244px;
$button-checkbox-width: 40px;
$button-checkbox-height: 20px;
$button-checkbox-total-width: 360px;
$button-checkbox-total-height: 273px;
$button-checkbox-image: './img/sprite.png';
$button-checkbox: (49px, 244px, -49px, -244px, 40px, 20px, 360px, 273px, './img/sprite.png', 'button-checkbox', );
$button-radio-name: 'button-radio';
$button-radio-x: 109px;
$button-radio-y: 244px;
$button-radio-offset-x: -109px;
$button-radio-offset-y: -244px;
$button-radio-width: 40px;
$button-radio-height: 20px;
$button-radio-total-width: 360px;
$button-radio-total-height: 273px;
$button-radio-image: './img/sprite.png';
$button-radio: (109px, 244px, -109px, -244px, 40px, 20px, 360px, 273px, './img/sprite.png', 'button-radio', );
$icon-coin-name: 'icon-coin';
$icon-coin-x: 0px;
$icon-coin-y: 122px;
$icon-coin-offset-x: 0px;
$icon-coin-offset-y: -122px;
$icon-coin-width: 102px;
$icon-coin-height: 102px;
$icon-coin-total-width: 360px;
$icon-coin-total-height: 273px;
$icon-coin-image: './img/sprite.png';
$icon-coin: (0px, 122px, 0px, -122px, 102px, 102px, 360px, 273px, './img/sprite.png', 'icon-coin', );
$icon-contact-hover-name: 'icon-contact-hover';
$icon-contact-hover-x: 0px;
$icon-contact-hover-y: 0px;
$icon-contact-hover-offset-x: 0px;
$icon-contact-hover-offset-y: 0px;
$icon-contact-hover-width: 170px;
$icon-contact-hover-height: 102px;
$icon-contact-hover-total-width: 360px;
$icon-contact-hover-total-height: 273px;
$icon-contact-hover-image: './img/sprite.png';
$icon-contact-hover: (0px, 0px, 0px, 0px, 170px, 102px, 360px, 273px, './img/sprite.png', 'icon-contact-hover', );
$icon-contact-name: 'icon-contact';
$icon-contact-x: 190px;
$icon-contact-y: 0px;
$icon-contact-offset-x: -190px;
$icon-contact-offset-y: 0px;
$icon-contact-width: 170px;
$icon-contact-height: 102px;
$icon-contact-total-width: 360px;
$icon-contact-total-height: 273px;
$icon-contact-image: './img/sprite.png';
$icon-contact: (190px, 0px, -190px, 0px, 170px, 102px, 360px, 273px, './img/sprite.png', 'icon-contact', );
$icon-google-plus-name: 'icon-google-plus';
$icon-google-plus-x: 0px;
$icon-google-plus-y: 244px;
$icon-google-plus-offset-x: 0px;
$icon-google-plus-offset-y: -244px;
$icon-google-plus-width: 29px;
$icon-google-plus-height: 29px;
$icon-google-plus-total-width: 360px;
$icon-google-plus-total-height: 273px;
$icon-google-plus-image: './img/sprite.png';
$icon-google-plus: (0px, 244px, 0px, -244px, 29px, 29px, 360px, 273px, './img/sprite.png', 'icon-google-plus', );
$icon-list-name: 'icon-list';
$icon-list-x: 200px;
$icon-list-y: 244px;
$icon-list-offset-x: -200px;
$icon-list-offset-y: -244px;
$icon-list-width: 10px;
$icon-list-height: 10px;
$icon-list-total-width: 360px;
$icon-list-total-height: 273px;
$icon-list-image: './img/sprite.png';
$icon-list: (200px, 244px, -200px, -244px, 10px, 10px, 360px, 273px, './img/sprite.png', 'icon-list', );
$icon-news-hover-name: 'icon-news-hover';
$icon-news-hover-x: 122px;
$icon-news-hover-y: 122px;
$icon-news-hover-offset-x: -122px;
$icon-news-hover-offset-y: -122px;
$icon-news-hover-width: 102px;
$icon-news-hover-height: 102px;
$icon-news-hover-total-width: 360px;
$icon-news-hover-total-height: 273px;
$icon-news-hover-image: './img/sprite.png';
$icon-news-hover: (122px, 122px, -122px, -122px, 102px, 102px, 360px, 273px, './img/sprite.png', 'icon-news-hover', );
$icon-news-name: 'icon-news';
$icon-news-x: 244px;
$icon-news-y: 122px;
$icon-news-offset-x: -244px;
$icon-news-offset-y: -122px;
$icon-news-width: 102px;
$icon-news-height: 102px;
$icon-news-total-width: 360px;
$icon-news-total-height: 273px;
$icon-news-image: './img/sprite.png';
$icon-news: (244px, 122px, -244px, -122px, 102px, 102px, 360px, 273px, './img/sprite.png', 'icon-news', );
$icon-search-name: 'icon-search';
$icon-search-x: 169px;
$icon-search-y: 244px;
$icon-search-offset-x: -169px;
$icon-search-offset-y: -244px;
$icon-search-width: 11px;
$icon-search-height: 11px;
$icon-search-total-width: 360px;
$icon-search-total-height: 273px;
$icon-search-image: './img/sprite.png';
$icon-search: (169px, 244px, -169px, -244px, 11px, 11px, 360px, 273px, './img/sprite.png', 'icon-search', );
$spritesheet-width: 360px;
$spritesheet-height: 273px;
$spritesheet-image: './img/sprite.png';
$spritesheet-sprites: ($button-checkbox, $button-radio, $icon-coin, $icon-contact-hover, $icon-contact, $icon-google-plus, $icon-list, $icon-news-hover, $icon-news, $icon-search, );
$spritesheet: (360px, 273px, './img/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
